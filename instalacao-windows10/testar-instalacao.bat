@echo off
chcp 65001 > nul
title Sistema PIT - Teste de Instala√ß√£o
cls

:: Cores para output
set "GREEN=[92m"
set "RED=[91m"
set "YELLOW=[93m"
set "BLUE=[94m"
set "RESET=[0m"

echo.
echo %BLUE%‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê%RESET%
echo %BLUE%    üß™ TESTE AUTOM√ÅTICO DE INSTALA√á√ÉO%RESET%
echo %BLUE%‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê%RESET%
echo.

cd /d "%~dp0\.."
set SISTEMA_PATH=%cd%

echo %BLUE%üìÅ Testando em: %SISTEMA_PATH%%RESET%
echo.

:: Teste 1: Estrutura de arquivos
echo %BLUE%[1/8] Verificando estrutura de arquivos...%RESET%
set ARQUIVOS_OK=0

if exist "package.json" (
    echo %GREEN%‚úÖ package.json%RESET%
    set /a ARQUIVOS_OK+=1
) else (
    echo %RED%‚ùå package.json%RESET%
)

if exist "backend\package.json" (
    echo %GREEN%‚úÖ backend\package.json%RESET%
    set /a ARQUIVOS_OK+=1
) else (
    echo %RED%‚ùå backend\package.json%RESET%
)

if exist "backend\.env" (
    echo %GREEN%‚úÖ backend\.env%RESET%
    set /a ARQUIVOS_OK+=1
) else (
    echo %YELLOW%‚ö†Ô∏è  backend\.env (ser√° criado)%RESET%
)

if exist "src\main.jsx" (
    echo %GREEN%‚úÖ src\main.jsx%RESET%
    set /a ARQUIVOS_OK+=1
) else (
    echo %RED%‚ùå src\main.jsx%RESET%
)

if %ARQUIVOS_OK% geq 3 (
    echo %GREEN%‚úÖ Estrutura de arquivos OK%RESET%
) else (
    echo %RED%‚ùå Estrutura de arquivos incompleta%RESET%
)
echo.

:: Teste 2: Node.js
echo %BLUE%[2/8] Verificando Node.js...%RESET%
node --version >nul 2>&1
if %errorLevel% equ 0 (
    echo %GREEN%‚úÖ Node.js instalado: %RESET%
    node --version
) else (
    echo %RED%‚ùå Node.js n√£o encontrado%RESET%
)

npm --version >nul 2>&1
if %errorLevel% equ 0 (
    echo %GREEN%‚úÖ NPM instalado: %RESET%
    npm --version
) else (
    echo %RED%‚ùå NPM n√£o encontrado%RESET%
)
echo.

:: Teste 3: Depend√™ncias do Backend
echo %BLUE%[3/8] Verificando depend√™ncias do backend...%RESET%
if exist "backend\node_modules" (
    echo %GREEN%‚úÖ Backend node_modules existe%RESET%
    
    :: Verificar algumas depend√™ncias cr√≠ticas
    if exist "backend\node_modules\express" (
        echo %GREEN%‚úÖ Express instalado%RESET%
    ) else (
        echo %RED%‚ùå Express n√£o encontrado%RESET%
    )
    
    if exist "backend\node_modules\pg" (
        echo %GREEN%‚úÖ PostgreSQL driver instalado%RESET%
    ) else (
        echo %YELLOW%‚ö†Ô∏è  PostgreSQL driver n√£o encontrado%RESET%
    )
) else (
    echo %RED%‚ùå Backend node_modules n√£o existe%RESET%
    echo %YELLOW%üí° Execute: cd backend && npm install%RESET%
)
echo.

:: Teste 4: Depend√™ncias do Frontend
echo %BLUE%[4/8] Verificando depend√™ncias do frontend...%RESET%
if exist "node_modules" (
    echo %GREEN%‚úÖ Frontend node_modules existe%RESET%
    
    if exist "node_modules\react" (
        echo %GREEN%‚úÖ React instalado%RESET%
    ) else (
        echo %RED%‚ùå React n√£o encontrado%RESET%
    )
    
    if exist "node_modules\vite" (
        echo %GREEN%‚úÖ Vite instalado%RESET%
    ) else (
        echo %RED%‚ùå Vite n√£o encontrado%RESET%
    )
) else (
    echo %RED%‚ùå Frontend node_modules n√£o existe%RESET%
    echo %YELLOW%üí° Execute: npm install%RESET%
)
echo.

:: Teste 5: Configura√ß√£o de Banco
echo %BLUE%[5/8] Verificando configura√ß√£o de banco...%RESET%
if exist "backend\.env" (
    findstr /i "DB_" backend\.env >nul
    if %errorLevel% equ 0 (
        echo %GREEN%‚úÖ Configura√ß√£o de banco encontrada%RESET%
    ) else (
        echo %YELLOW%‚ö†Ô∏è  Configura√ß√£o de banco n√£o encontrada%RESET%
    )
) else (
    echo %YELLOW%‚ö†Ô∏è  Arquivo .env n√£o existe%RESET%
)

:: Verificar PostgreSQL
psql --version >nul 2>&1
if %errorLevel% equ 0 (
    echo %GREEN%‚úÖ PostgreSQL dispon√≠vel%RESET%
) else (
    echo %YELLOW%‚ö†Ô∏è  PostgreSQL n√£o encontrado (SQLite ser√° usado)%RESET%
)
echo.

:: Teste 6: Portas
echo %BLUE%[6/8] Verificando portas...%RESET%
netstat -an | find ":3001" >nul 2>&1
if %errorLevel% equ 0 (
    echo %YELLOW%‚ö†Ô∏è  Porta 3001 em uso%RESET%
) else (
    echo %GREEN%‚úÖ Porta 3001 livre%RESET%
)

netstat -an | find ":5173" >nul 2>&1
if %errorLevel% equ 0 (
    echo %YELLOW%‚ö†Ô∏è  Porta 5173 em uso%RESET%
) else (
    echo %GREEN%‚úÖ Porta 5173 livre%RESET%
)
echo.

:: Teste 7: Scripts de controle
echo %BLUE%[7/8] Verificando scripts de controle...%RESET%
if exist "üçï Iniciar Sistema.bat" (
    echo %GREEN%‚úÖ Script de inicializa√ß√£o%RESET%
) else (
    echo %YELLOW%‚ö†Ô∏è  Script de inicializa√ß√£o n√£o encontrado%RESET%
)

if exist "üõë Parar Sistema.bat" (
    echo %GREEN%‚úÖ Script de parada%RESET%
) else (
    echo %YELLOW%‚ö†Ô∏è  Script de parada n√£o encontrado%RESET%
)

if exist "üåê Acessar Sistema.bat" (
    echo %GREEN%‚úÖ Script de acesso%RESET%
) else (
    echo %YELLOW%‚ö†Ô∏è  Script de acesso n√£o encontrado%RESET%
)
echo.

:: Teste 8: Teste de sintaxe
echo %BLUE%[8/8] Teste de sintaxe do backend...%RESET%
cd backend
node -c server.js >nul 2>&1
if %errorLevel% equ 0 (
    echo %GREEN%‚úÖ Sintaxe do server.js OK%RESET%
) else (
    echo %RED%‚ùå Erro de sintaxe no server.js%RESET%
)
cd ..
echo.

:: Resumo
echo %BLUE%‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê%RESET%
echo %BLUE%    üìã RESUMO DO TESTE%RESET%
echo %BLUE%‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê%RESET%
echo.

:: Calcular pontua√ß√£o
set PONTOS=0

if %ARQUIVOS_OK% geq 3 set /a PONTOS+=1
node --version >nul 2>&1 && set /a PONTOS+=1
if exist "backend\node_modules" set /a PONTOS+=1
if exist "node_modules" set /a PONTOS+=1
if exist "backend\.env" set /a PONTOS+=1

if %PONTOS% geq 4 (
    echo %GREEN%üéâ SISTEMA PRONTO PARA USO! (%PONTOS%/5 pontos)%RESET%
    echo.
    echo %YELLOW%Para iniciar:%RESET%
    echo   üçï Iniciar Sistema.bat
    echo.
    echo %YELLOW%Para acessar:%RESET%
    echo   http://localhost:5173
    echo   admin@pizzaria.com / admin123
) else (
    echo %RED%‚ö†Ô∏è  SISTEMA PRECISA DE CONFIGURA√á√ÉO (%PONTOS%/5 pontos)%RESET%
    echo.
    echo %YELLOW%Solu√ß√µes:%RESET%
    if %PONTOS% lss 2 (
        echo   1. Execute: instalar-universal.bat
    ) else (
        echo   1. Instale depend√™ncias: npm install
        echo   2. Configure backend: cd backend && npm install
    )
)

echo.
echo %BLUE%üí° DICA: Use instalar-universal.bat para instala√ß√£o autom√°tica%RESET%
echo.
pause